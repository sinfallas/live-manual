:B~ Repositorios Git

1~git-repositories Repositorios Git

La lista de todos los repositorios disponibles del ${project} está en
http://live-systems.org/gitweb/. Las URLs git del proyecto tienen la forma:
#{protocolo://live-systems.org/git/repositorio}#. Por lo tanto, para clonar
live-manual en sólo lectura, lanzar: 

code{

 $ git clone git://live-systems.org/git/live-manual.git

}code

O,

code{

 $ git clone https://live-systems.org/git/live-manual.git

}code

O,

code{

 $ git clone http://live-systems.org/git/live-manual.git

}code

Las direcciones para clonar con permiso de escritura tienen la forma:
#{git@live-systems.org:/repositorio}#.

Así que, de nuevo, para clonar live-manual a través de ssh escribir:

code{

 $ git clone git@live-systems.org:live-manual.git

}code

El árbol git se compone de varias ramas diferentes. Las ramas *{debian}* y
*{debian-next}* son particularmente notables porque contienen el trabajo
real que, con el tiempo, será incluido en cada nueva versión.

Después de clonar cualquiera de los repositorios existentes, nos encontramos
en la rama *{debian}*. Esto es apropiado para echar un vistazo al estado de
la última versión del proyecto, pero antes de empezar a trabajar es
fundamental cambiar a la rama *{debian-next}*. Para ello:

code{

 $ git checkout debian-next

}code

La rama *{debian-next}*, la cual no es siempre fast-forward, es donde se
realizan todos los cambios antes de que se fusionen en la rama
*{debian}*. Para hacer una analogía, es como un campo de pruebas. Si se está
trabajando en esta rama y se necesita hacer un pull, se tendrá que hacer un
#{git pull --rebase}# para que las modificaciones locales se guarden
mientras se actualiza desde el servidor y entonces los cambios locales se
pondrán encima de todos los demás.

2~ Manejo de múltiples repositorios

Si se tiene la intención de clonar varios de los repositorios y cambiar a la
rama *{debian-next}* de inmediato para comprobar el último código, escribir
un parche o contribuir con una traducción se debe saber que el servidor
proporciona un fichero #{mrconfig}# para facilitar el manejo de múltiples
repositorios. Para utilizarlo es necesario instalar el paquete /{mr}/ y a
continuación, lanzar:

code{

 $  mr bootstrap http://live-systems.org/other/mr/mrconfig

}code

Este comando automáticamente clonará y cambiará a la rama *{debian-next}*
los repositorios de desarrollo de los paquetes Debian producidos por el
proyecto. Estos incluyen, entre otros, el repositorio live-images, que
contiene las configuraciones utilizadas para las imágenes prefabricadas que
el proyecto publica para uso general. Para obtener más información sobre
cómo utilizar este repositorio, consultar {Clonar una configuración
publicada a través de Git}#clone-configuration-via-git
