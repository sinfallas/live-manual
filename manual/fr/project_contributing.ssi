:B~ Contribuer au projet

1~contributing-to-project Contribuer au projet

Lorsque vous soumettez une contribution, veuillez indiquer clairement le
copyright et inclure toute mention légale relative à la licence. Notez que
pour être acceptée, la contribution doit être déposée sous la même licence
que le reste du document, c'est-à-dire la GPL version 3 ou ultérieure.

Les contributions au projet, comme les traductions et les correctifs, sont
bienvenues. Les livraisons au dépôt sont possibles pour tout le monde,
cependant, nous vous demandons d'envoyer les changements importants sur la
liste de diffusion au préalable. Veuillez consulter {Contacter}#contact pour
plus d'informations.

Le ${project} utilise Git en tant que système de contrôle de version et de
gestion du code source. Comme expliqué dans {Dépôts Git}#git-repositories il
existe deux branches de développement principales: *{debian}* et
*{debian-next}*. Tout le monde peut faire des livraisons aux branches
debian-next des dépôts live-boot, live-build, live-config, live-images,
live-manual et live-tools.

Cependant, il y a certaines restrictions. Le serveur rejette:

_* Push non fast-forward.

_* Commits merge.

_* Ajout ou suppression d'étiquettes ou des branches.

Même si toutes les livraisons pourraient être révisées, nous vous demandons
d'utiliser votre bon sens et de faire bonnes livraisons avec de bons
messages de livraison.

_* Veuillez écrire les commentaires de livraison à l'aide de phrases
complètes, en commençant par une majuscule et en terminant par un point, et
avec la forme 'Fixing/Adding/Removing/Correcting/Translating/...'.

_* Écrivez de bons messages de livraison. La première ligne doit être un
résumé précis du contenu du commit qui sera inclus dans le changelog. Si
vous avez besoin de faire quelques explications supplémentaires, écrivez-les
au-dessous en laissant une ligne vide après la première, puis une autre
ligne vide après chaque paragraphe. Les lignes des paragraphes ne doivent
pas dépasser 80 caractères.

_* Faites des livraisons de façon atomique, c'est-à-dire, ne mélangez pas
des choses sans liens entre elles dans la même livraison. Faites un commit
différent pour chaque modification que vous apportez.

2~ Faire des changements

Afin de faire un push sur les dépôts, vous devez suivre la procédure
suivante. Ici, nous utilisons live-manual comme un exemple pour le remplacer
par le nom du dépôt dans lequel vous souhaitez travailler. Pour plus
d'informations sur la façon de modifier live-manual, consultez {Contribuer à
ce document}#how-to-contribute.

_* Téléchargez la clé publique:

code{

 $ mkdir -p ~/.ssh/keys
 $ wget http://live-systems.org/other/keys/git@live-systems.org -O ~/.ssh/keys/git@live-systems.org
 $ wget http://live-systems.org/other/keys/git@live-systems.org.pub -O ~/.ssh/keys/git@live-systems.org.pub
 $ chmod 0600 ~/.ssh/keys/git@live-systems.org*

}code

_* Ajoutez la section suivante à votre configuration openssh-client:

code{

 $ cat >> ~/.ssh/config << EOF
 Host live-systems.org
     Hostname live-systems.org
     User git
     IdentitiesOnly yes
     IdentityFile ~/.ssh/keys/git@live-systems.org
 EOF

}code

_* Clonez live-manual avec ssh:

code{

 $ git clone git@live-systems.org:/live-manual.git
 $ cd live-manual && git checkout debian-next

}code

_* Assurez-vous d'avoir renseignés les champs d'auteur et d'email dans Git:

code{

  $ git config user.name "John Doe"
  $ git config user.email john@example.org

}code

*{Important:}* Rappelez-vous que vous devez livrer les changements sur la branche *{debian-next}*.

_* Effectuez vos modifications. Dans cet exemple, vous devriez commencer par
écrire une nouvelle section traitant l'application des correctifs et ensuite
préparer l'ajout des fichiers et écrire le message de livraison comme ceci:

code{

 $ git commit -a -m "Adding a section on applying patches."

}code

_* Envoyez votre commit au serveur:

code{

 $ git push

}code
