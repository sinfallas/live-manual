:B~ Dépôts Git 

1~git-repositories Dépôts Git

La liste de tous les dépôts disponibles du ${project} est sur
http://live-systems.org/gitweb/. Les URLs git du projet ont la forme:
#{protocole://live-systems.org/git/dépôt}#. Ainsi, afin de cloner
live-manual en lecture seule, lancer:

code{

 $ git clone git://live-systems.org/git/live-manual.git

}code

Ou,

code{

 $ git clone https://live-systems.org/git/live-manual.git

}code

Ou,

code{

 $ git clone http://live-systems.org/git/live-manual.git

}code

Les adresses pour cloner avec autorisation d'écriture ont la forme:
#{git@live-systems.org:/dépôt}#.

Donc, encore une fois, pour cloner live-manual sur ssh, vous devez taper:

code{

 $ git clone git@live-systems.org:live-manual.git

}code

L'arbre git est composé de plusieurs branches différentes. Les branches
*{debian}* et *{debian-next}* sont particulièrement remarquables car elles
contiennent le travail réel qui sera finalement inclus dans chaque nouvelle
version.

Après avoir cloné quelques-uns des dépôts existants, vous serez sur la
branche *{debian}*. Ceci est approprié pour jeter un œil à l'état de la
dernière version du projet, mais avant de commencer le travail, il est
essentiel de passer à la branche *{debian-next}*. Pour ce faire:

code{

 $ git checkout debian-next

}code

La branche *{debian-next}*, qui n'est pas toujours fast-forward, est
l'endroit où toutes les modifications sont envoyées en premier, avant de les
fusionner dans la branche *{debian}*. Pour faire une analogie, c'est comme
un terrain d'essai. Si vous travaillez sur cette branche et avez besoin de
faire un pull, vous devrez faire un #{git pull --rebase}# de sorte que vos
modifications locales sont stockées tandis qu'on fait une mise à jour à
partir du serveur, puis vos changements seront mis au-dessus de tout cela.

2~ Gestion de multiples dépôts

Si vous avez l'intention de cloner plusieurs des dépôts Live Systems et
passer à la branche *{debian-next}* tout de suite pour vérifier le dernier
code, écrire un correctif ou contribuer avec une traduction, vous devriez
savoir que le serveur git fournit un fichier #{mrconfig}# pour faciliter la
manipulation de multiples dépôts. Pour l'utiliser, vous devez installer le
paquet /{mr}/, puis lancer:

code{

 $  mr bootstrap http://live-systems.org/other/mr/mrconfig

}code

Cette commande va automatiquement cloner et passer à la branche
*{debian-next}* les dépôts de développement des paquets Debian produits par
le projet. Ceux-ci comprennent, entre autres, le dépôt live-images, qui
contient les configurations utilisées pour les images précompilées que le
projet publie pour un usage général. Pour plus d'informations sur la façon
d'utiliser ce dépôt, voir {Cloner une configuration publiée via
Git}#clone-configuration-via-git
