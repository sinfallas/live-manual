:B~ Installazione

1~installation Installazione

2~requirements Requisiti

Building live system images has very few system requirements:

_* Accesso come utente root

_* Una versione aggiornata di live-build

_* Una shell POSIX-compliant, come /{bash}/ o /{dash}/

_* /{debootstrap}/

_* Linux 2.6 o successivi

Si noti che usare Debian o una distribuzione derivata Debian non è richiesto
- live-build funzionerà sostanzialmente su qualsiasi distribuzione che
soddisfi i requisiti di cui sopra.

2~installing-live-build Installare live-build

Si può installare live-build in diversi modi:

_* Dal repository Debian

_* Da sorgenti

_* Da istantanee

Se si sta usando Debian, il metodo raccomandato è di installare live-build
attraverso il repository Debian.

3~ Dal repository Debian

Installare live-build come qualsiasi altro pacchetto:

code{

 # apt-get install live-build

}code

3~ Da sorgenti

live-build è sviluppato usando il sistema di controllo versione Git. Sui
sistemi basati su Debian è fornito dal pacchetto /{git}/. Per scaricare il
codice aggiornato, eseguire:

code{

 $ git clone git://live-systems.org/git/live-build.git

}code

È possibile costruirsi ed installarsi il proprio pacchetto Debian eseguendo:

code{

 $ cd live-build
 $ dpkg-buildpackage -b -uc -us
 $ cd ..

}code

Si installino ora i file #{.deb}# appena generati ai quali si è interessati,
ad esempio:

code{

 # dpkg -i live-build_4.0-1_all.deb

}code

Si può anche installare live-build direttamente sul proprio sistema
eseguendo:

code{

 # make install

}code

e disinstallarlo con:

code{

 # make uninstall

}code

3~ Da "istantanee"

Se non si desidera generare o installare live-build da sorgenti, è possibile
usare le istantanee. Sono costruite automaticamente dall'ultima versione
presente su Git e disponibili su http://live-systems.org/debian/.

2~ Installare live-boot e live-config

*{Note:}* You do not need to install live-boot or live-config on your system to create customized live systems. However, doing so will do no harm and is useful for reference purposes. If you only want the documentation, you may now install the /{live-boot-doc}/ and /{live-config-doc}/ packages separately.

3~ Dal repository Debian

Sia  live-boot che live-config sono disponibili dai repository Debian come
per l'{installazione di live-build}#installing-live-build.

3~ Da sorgenti

Per utilizzare i sorgenti più recenti da Git si può seguire il procedimento
seguente. Assicurarsi di conoscere i termini menzionati nel
{Glossario}#terms.

_* Scaricare i sorgenti di live-boot e live-config

code{

 $ git clone git://live-systems.org/git/live-boot.git
 $ git clone git://live-systems.org/git/live-config.git

}code

Consultare la pagine man di live-boot e live-config per i dettagli sulla
personalizzazione se questa è il motivo per compilare questi pacchetti dai
sorgenti.

_* Costruire un .deb di live-boot e live-config

You must build either on your target distribution or in a chroot containing
your target platform: this means if your target is ${testing} then you
should build against ${testing}.

Use a personal builder such as /{pbuilder}/ or /{sbuild}/ if you need to
build live-boot for a target distribution that differs from your build
system. For example, for ${testing} live images, build live-boot in a
${testing} chroot. If your target distribution happens to match your build
system distribution, you may build directly on the build system using
#{dpkg-buildpackage}# (provided by the /{dpkg-dev}/ package):

code{

 $ cd live-boot
 $ dpkg-buildpackage -b -uc -us
 $ cd ../live-config
 $ dpkg-buildpackage -b -uc -us

}code

_* Usare il .deb di live-boot generato

As live-boot and live-config are installed by live-build system, installing
the packages in the host system is not sufficient: you should treat the
generated .deb files like any other custom packages. Since your purpose for
building from source is likely to test new things over the short term before
the official release, follow {Installing modified or third-party
packages}#installing-modified-or-third-party-packages to temporarily include
the relevant files in your configuration. In particular, notice that both
packages are divided into a generic part, a documentation part and one or
more back-ends. Include the generic part, only one back-end matching your
configuration, and optionally the documentation. Assuming you are building a
live image in the current directory and have generated all .deb files for a
single version of both packages in the directory above, these bash commands
would copy all of the relevant packages including default back-ends:

code{

 $ cp ../live-boot{_,-initramfs-tools,-doc}*.deb  config/packages.chroot/
 $ cp ../live-config{_,-sysvinit,-doc}*.deb  config/packages.chroot/

}code

3~ Da "istantanee"

You can let live-build automatically use the latest snapshots of live-boot
and live-config by configuring the package repository on live-systems.org as
a third-party repository in your live-build configuration directory.
